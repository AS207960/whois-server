kind: ConfigMap
apiVersion: v1
metadata:
  name: whois-django-conf
data:
  HOST: whois-web.as207960.net
  DJANGO_SETTINGS_MODULE: whois_client.settings
  EXTERNAL_URL: "https://whois-web.as207960.net"
  DB_HOST: "cockroachdb"
  DB_NAME: "whois"
  WHOIS_ADDR: "domains-whois-grpc:50051"
  S3_ENDPOINT: "https://s3.as207960.net"
  S3_REGION: "garage"
  S3_BUCKET: "whois-web-django"
  S3_ACCESS_KEY_ID: "GKbd4fc9c65056361f616775ed"
  S3_CUSTOM_DOMAIN: "whois-web-django.content.as207960.net"
  STATIC_URL: "https://whois-web-django.content.as207960.net/"
  MEDIA_URL: "https://whois-web-django.content.as207960.net/"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: whois-django
  labels:
    app: whois
    part: django
spec:
  replicas: 1
  selector:
    matchLabels:
      app: whois
      part: django
  template:
    metadata:
      annotations:
        cni.projectcalico.org/ipv6pools: "[\"default-ipv6-ippool\"]"
      labels:
        app: whois
        part: django
    spec:
      initContainers:
        - name: django
          image: as207960/whois-django:(version)
          imagePullPolicy: Always
          command: ["sh", "-c", "python3 manage.py collectstatic --noinput && python3 manage.py migrate"]
          envFrom:
            - configMapRef:
                name: whois-django-conf
            - secretRef:
                name: whois-db-creds
              prefix: "DB_"
            - secretRef:
                name: whois-django-secret
            - secretRef:
                name: whois-django-s3
      containers:
        - name: gunicorn
          image: as207960/whois-django:(version)
          imagePullPolicy: Always
          command: ["gunicorn", "-w", "8", "-b", "[::]:8000", "--forwarded-allow-ips", "*", "--access-logfile", "-", "whois_client.wsgi:application"]
          ports:
            - containerPort: 8000
          envFrom:
            - configMapRef:
                name: whois-django-conf
            - secretRef:
                name: whois-db-creds
              prefix: "DB_"
            - secretRef:
                name: whois-django-secret
            - secretRef:
                name: whois-django-s3
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: whois-django
spec:
  podSelector:
    matchLabels:
      app: whois
      part: django
  policyTypes:
  - Ingress
  ingress:
  - from:
      - namespaceSelector:
          matchLabels:
            app.kubernetes.io/name: ingress-nginx
        podSelector:
          matchLabels:
            app.kubernetes.io/name: ingress-nginx
    ports:
    - protocol: TCP
      port: 8000
---
apiVersion: v1
kind: Service
metadata:
  name: whois-django
  labels:
    app: whois
    part: django
spec:
  selector:
    app: whois
    part: django
  ports:
    - port: 8000
      targetPort: 8000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: whois-ingress
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt"
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/enable-cors: "true"
spec:
  tls:
    - hosts:
        - whois-web.as207960.net
      secretName: whois-tls
  rules:
    - host: whois-web.as207960.net
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: whois-django
                port:
                  number: 8000